@import "../../../../styles/abstracts/variables";
@import "../../../../styles/abstracts/mixin";

.filterBtn {
  @include flex-direction-alignItems-gap-padding(row, center, 0.5rem, 1rem);
  border-radius: 0.5rem;
  height: 3rem;
  font-size: $font-size-12;
  font-weight: 700;
  svg {
    stroke-width: 3;
    min-width: 0.9rem;
    display: block;
    aspect-ratio: 1/1;
    fill: none;
    stroke: currentcolor;
  }
}

.filterModal {
  background-color: white;
  @include center-position(fixed);
  width: clamp(41rem, 90%, 48rem);
  height: 90vh;
  @include flex-direction-align-justify-padding-gap(
    column,
    flex-start,
    space-between,
    0,
    1rem
  );
  border-radius: $border-radius-1;
  @include model-boxShadow;
  animation: slide-up 0.5s ease-out forwards;
  z-index: $z-index-overlay;

  .filterModalHeader {
    border-top-left-radius: $border-radius-1;
    border-top-right-radius: $border-radius-1;
    @include flex-alignCenter-gap(calc(50% - 2rem));
    max-height: 4rem;
    padding: 1rem 1rem 0 1rem;
    @include borderBottom-width-color-paddingBottom(1px, $gray-3, 1rem);
    button {
      box-shadow: none;
      font-size: $font-size-16;
      font-weight: 700;
    }
    h1 {
      font-size: $font-size-16;
      font-weight: 800;
    }
  }

  .container {
    max-height: calc(100% - 12rem);
    overflow-y: auto;
    @include flex-direction-gap-padding(column, 1rem, 1rem 2rem 1rem 2rem);

    h2 {
      font-size: $font-size-20;
      font-weight: 700;
    }
    p {
      font-size: $font-size-16;
      font-weight: 400;
    }
    > *:not(:last-child) {
      @include borderBottom-width-color-paddingBottom(1px, $gray-3, 1rem);
    }

    .type {
      @include flex-direction-gap-padding(column, 1rem, 1rem);

      .typeRadio {
        display: flex;
        width: 100%;
        padding-inline: 2rem;
        li {
          width: 33.3%;
          label {
            width: 100%;
            text-align: center;
            @include flex-center;
            color: $black-1;
            font-size: $font-size-16;
            min-height: 4rem;
            @include border-solid-color-width($gray-3, 1px);
            font-weight: 700;
            @include buttonBackground;
          }
          &:first-of-type {
            label {
              border-end-start-radius: $border-radius-1;
              border-top-left-radius: $border-radius-1;
              border-right-color: transparent;
            }
          }
          &:last-of-type {
            label {
              border-start-end-radius: $border-radius-1;
              border-end-end-radius: $border-radius-1;
              border-left-color: transparent;
            }
          }
          label {
            &:hover {
              @include border-solid-color-width($gray-3, 1px);
              border-color: $black-1;
            }
          }
        }
        input:checked + label {
          background-color: $black-1;
          color: white;
          box-shadow: inset 0 0 2px;
          border: transparent;
        }
      }
    }

    .priceRange {
      width: 100%;
      @include flex-direction-gap-padding(column, 0.5rem, 1rem);

      input {
        width: calc(100% - 4rem);
        align-self: center;
      }
      .price {
        width: calc(100% - 4rem);
        @include flex-center;
        gap: 1rem;
        align-self: center;
        div {
          @include border-solid-color-width-radius(
            $gray-3,
            1px,
            $border-radius-1-2
          );

          width: 50%;
          padding: 0.5rem;
          h6 {
            font-size: $font-size-12;
            font-weight: 400;
          }
          h3 {
            font-size: $font-size-16;
            font-weight: 300;
          }
        }
      }
    }

    .rooms {
      input {
        display: none;
      }
      min-height: fit-content;
      @include flex-direction-gap-padding(column, 1rem, 1rem);

      div {
        min-height: fit-content;
        @include flex-direction-gap-padding(row, 1rem, 0);
      }
      label {
        min-height: 2rem;
        min-width: 3rem;
        @include flex-center;
        font-size: $font-size-15;
        @include border-solid-color-width-radius(
          $gray-3,
          1px,
          $border-radius-2
        );
      }
    }

    .amenities {
      display: grid;
      gap: 1rem;
      ul {
        @include grid-columns-gap(3, 1.5rem);
        label {
          @include flex-direction-gap-padding(row, 0.5rem, 0);
          font-size: $font-size-16;
          font-weight: 300;
          input[type="checkbox"] {
            width: 2rem;
          }
        }
      }
    }
  }

  .actions {
    height: 4rem;
    display: flex;
    padding: 0 2rem 2rem 2rem;
    justify-content: space-between;
    button {
      min-height: 3rem;
      font-weight: 700;
      box-shadow: none;
      border-radius: $border-radius-1-2;

      &:first-of-type {
        color: $black-1;
        width: 6rem;
        &:hover {
          background-color: $gray-3;
        }
      }
      &:last-of-type {
        color: white;
        background-color: $black-1;
        width: 10rem;
        &:hover {
          background-color: black;
        }
      }
    }
  }

  input:checked + label {
    background-color: $black-1;
    color: white;
    box-shadow: inset 0 0 2px;
    border: transparent;
  }
}

@media (max-width: 780px) {
  .filterBtn {
    grid-area: 1/2/2/-1;
    border-radius: 100vw;
    padding: 0rem;
    @include flex-center;
    width: 2.5rem;
    height: 2.5rem;

    p {
      display: none;
    }
    svg {
      width: 1.15rem;
    }
  }
}

@media (max-width: 750px) {
  .filterModal {
    width: 100vw;
    max-width: none;
    min-width: 100vw;
    width: clamp(100vw, 100%, 100vw);

    .container {
      padding-inline: 1rem;
    }
  }
}

@keyframes slide-up {
  from {
    transform: translate(-50%, 100%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, -50%);
    opacity: 1;
  }
}
