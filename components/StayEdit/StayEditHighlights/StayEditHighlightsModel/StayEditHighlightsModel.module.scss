@import "../../../../styles/abstracts/mixin";
@import "../../../../styles/abstracts/variables";

.highlightCon {
  width: clamp(15rem, 100%, 40rem);
  position: relative;
  .modelBtn {
    @include border-solid-color-width-radius($gray-2, 1px, $border-radius-1-2);
    @include flex-direction-align-justify-padding-gap(
      row,
      center,
      flex-start,
      0,
      2rem
    );
    width: 100%;
    height: 6rem;
    padding: calc(1rem - 1px);
    position: relative;
    overflow: hidden;
    svg {
      height: 3rem;
      min-height: 3rem;
      aspect-ratio: 1/1;
    }
    .text {
      max-width: calc(100% - 5rem);
      text-align: left;
      h2 {
        font-size: $font-size-20;
        font-weight: 500;
        color: $gray-1;
        position: relative;
        z-index: 1;
      }
      h3 {
        font-size: $font-size-18;
        font-weight: 600;
      }
      h4 {
        font-size: $font-size-15;
        font-weight: 400;
        line-height: $line-height-15;
        color: $gray-1;
        line-break: auto;
        max-height: calc(3 * $line-height-15);
        @include text-overflow-ellipsis-warp;
      }
    }

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: $pink-2;
      transform: translateX(-100%);
      transition: transform 0.4s ease-in-out;
      z-index: -1;
    }

    &:hover::before {
      transform: translateX(0);
    }
  }

  .editHighlightModel {
    @include center-position(fixed);
    @include model-boxShadow;
    @include flex-direction-align-justify-padding-gap(
      column,
      baseline,
      space-between,
      1rem,
      1rem
    );

    height: 80vh;
    width: clamp(15rem, 100%, 30rem);
    border-radius: $border-radius-1-2;
    background-color: white;
    z-index: 2;
    h3 {
      font-size: $font-size-20;
      font-weight: 500;
      width: 100%;
      text-align: center;
      @include borderBottom-width-color-paddingBottom(1px, $gray-3, 1rem);
    }
    input,
    textarea {
      &:hover {
        cursor: text;
      }
    }
    input {
      height: 3rem;
      width: 100%;
      padding-inline: 0.5rem;
      background-color: $gray-4;
      @include border-solid-color-width-radius(
        $gray-3,
        1px,
        $border-radius-1-2
      );
      font-size: $font-size-15;
    }
    textarea {
      width: 100%;
      resize: none;
      font-size: $font-size-16;
      height: calc(3 * $line-height-15 + 2rem);
      line-height: $line-height-18;
      background-color: $gray-4;
      padding: 0.5rem;
      @include border-solid-color-width-radius(
        $gray-3,
        1px,
        $border-radius-1-2
      );
      display: flex;
    }
    .iconPicker {
      width: 100%;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(4rem, 1fr));
      gap: 1rem;
      overflow: auto;
      li {
        height: 4rem;
        aspect-ratio: 1/1;
        @include border-solid-color-width-radius(
          $gray-2,
          1px,
          $border-radius-1-2
        );
        padding: 0.5rem;
        svg {
          stroke-width: 200 !important;
        }

        &:hover {
          border-color: $black-1;
          border-width: 2px;
          padding: calc(0.5rem - 1px);
        }
      }
      .selected {
        border-color: $black-1;
        border-width: 2px;
        padding: calc(0.5rem - 1px);
      }
    }
    .actions {
      @include flex-direction-align-justify-padding-gap(
        row,
        center,
        space-between,
        0,
        0
      );
      width: 100%;
      justify-self: end;
      button {
        width: fit-content;
        padding-inline: 2rem;
        padding-block: 0.75rem;
        font-size: $font-size-16;
        box-sizing: border-box;
        font-weight: 700;
        border-radius: $border-radius-1-2;

        &:first-of-type {
          text-decoration: underline;
          background-color: $gray-3;
        }
        &:last-of-type {
          background-color: $black-1;
          color: white;
        }
        &.disabled {
          background-color: $gray-3;
          &:hover {
            cursor: not-allowed;
          }
        }
      }
      .publish {
        background-color: $main-pink;
        color: white;
        border-radius: $border-radius-1-2;
        width: fit-content;
        padding-inline: 2rem;
        padding-block: 0.75rem;
        font-size: $font-size-16;
        box-sizing: border-box;
        font-weight: 700;
      }
    }
  }
}

.red {
  color: red !important;
}

@media (max-width: 32rem) {
  .highlightCon {
    .modelBtn {
      .text {
        @include text-overflow-ellipsis-warp-off;
      }
    }
  }
}

body:has(.editHighlightModel) {
  .editHighlightModel,
  .editHighlightModel * {
    pointer-events: all;
  }
  :not(.editHighlightModel, .editHighlightModel *) {
    pointer-events: none;
  }
}
